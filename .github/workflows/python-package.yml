# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Selenium Web Test (Python)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.5', '3.6', '3.7', '3.8']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
              
    - name: Install Google Chrome # Using shell script to install Google Chrome
      run: |
        chmod +x ./scripts/InstallChrome.sh
        ./scripts/InstallChrome.sh
    - name: Install Firefox
      run: |
        sudo apt install firefox
    
    - name: Install Selenium
      run: |
        pip install -U selenium
        
    - name: Install chromedriver and geckodriver (Firefox)
      run: |
        chmod +x ./scripts/chromedriver.sh ./scripts/geckodriver.sh
        ./scripts/chromedriver.sh
        ./scripts/geckodriver.sh 
    
    - name: Confirm pytest is working
      run: |
        echo "def test_1(): pass" > nothing.py
        pytest nothing.py
    - name: Run pytest test_demo_submission.py --browser=chrome --headless
      run: |
        pytest tests/test_demo_submission.py -v -s --junit-xml=junit/test-results.xml
        
    - name: Run pytest test_demo_submission.py --browser=firefox --headless
      run: |
        pytest tests/test_demo_submission.py -v -s --junit-xml=junit/test-results.xml
    - name: Run title test
      run: |
        pytest test.py
